// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::hand_slot_packet::HandSlotPacket;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct StdbHandleHandSlotArgs {
    pub player_id: u32,
    pub packet: HandSlotPacket,
}

impl Reducer for StdbHandleHandSlotArgs {
    const REDUCER_NAME: &'static str = "stdb_handle_hand_slot";
}

#[allow(unused)]
pub fn stdb_handle_hand_slot(player_id: u32, packet: HandSlotPacket) {
    StdbHandleHandSlotArgs { player_id, packet }.invoke();
}

#[allow(unused)]
pub fn on_stdb_handle_hand_slot(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &u32, &HandSlotPacket)
        + Send
        + 'static,
) -> ReducerCallbackId<StdbHandleHandSlotArgs> {
    StdbHandleHandSlotArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let StdbHandleHandSlotArgs { player_id, packet } = __args;
        __callback(__identity, __addr, __status, player_id, packet);
    })
}

#[allow(unused)]
pub fn once_on_stdb_handle_hand_slot(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &u32, &HandSlotPacket) + Send + 'static,
) -> ReducerCallbackId<StdbHandleHandSlotArgs> {
    StdbHandleHandSlotArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let StdbHandleHandSlotArgs { player_id, packet } = __args;
        __callback(__identity, __addr, __status, player_id, packet);
    })
}

#[allow(unused)]
pub fn remove_on_stdb_handle_hand_slot(id: ReducerCallbackId<StdbHandleHandSlotArgs>) {
    StdbHandleHandSlotArgs::remove_on_reducer(id);
}
